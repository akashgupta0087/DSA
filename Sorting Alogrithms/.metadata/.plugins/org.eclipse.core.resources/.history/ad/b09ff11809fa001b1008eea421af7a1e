package sorting.mergesort;

public class MergeSort {
	
	public int[] sort(int start, int end, int[] arr) {
		int[] resultArr = null;
		if(start < end) {
			int mid = (start + end) / 2;
			int[] leftArr = getArr(start, mid, arr);
			int[] leftSorted = sort(start, mid, leftArr);
			
			int[] rightArr = getArr(mid+1, end, arr);
			int[] rightSorted = sort(mid+1, end, rightArr);
			resultArr = merge(leftSorted, rightSorted);
		}
		return resultArr;
	}
	
	private int[] merge(int[] leftArr, int[] rightArr) {
		int n = leftArr.length + rightArr.length;
		int[] resultArr = new int[n];
		return resultArr;
	}
	
	private int[] getArr(int start, int end, int[] arr) {
		int n = (end-start) + 1;
		int[] newArr = new int[n];
		for(int i = 0; i < n; i++) {
			newArr[i] = arr[i];
		}
		return newArr;
		
	}
	
}
